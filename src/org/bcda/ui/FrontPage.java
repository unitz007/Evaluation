package org.bcda.ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.bcda.includes.*;


/**
 *
 * @author Dinneya Charles .C.
 */
public class FrontPage extends javax.swing.JFrame {

    /**
     * Creates new form FrontPage
     */
    static int i = 0;

    public FrontPage() {
        initComponents();
        dbQuery db = new dbQuery(bodyTable, lotList, titleLabel);
        db.load();
        lotList.setSelectedIndex(lotList.getItemCount()-1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        lotList = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        bodyTable = new javax.swing.JTable();
        projectTitle = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        save = new javax.swing.JMenu();
        newLot = new javax.swing.JMenuItem();
        saveRecords = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.black);
        setForeground(java.awt.Color.gray);
        setLocation(new java.awt.Point(0, 70));
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Garamond", 1, 12)); // NOI18N
        jLabel1.setText("LOT NO:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(99, 19, 50, 15);

        lotList.setFont(new java.awt.Font("Garamond", 1, 12)); // NOI18N
        lotList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lotListFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lotListFocusLost(evt);
            }
        });
        lotList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lotListMouseClicked(evt);
            }
        });
        lotList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lotListActionPerformed(evt);
            }
        });
        getContentPane().add(lotList);
        lotList.setBounds(161, 14, 70, 25);

        bodyTable.setFont(new java.awt.Font("Garamond", 1, 12)); // NOI18N
        bodyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name of  Company ", "CAC, CAC2 & CAC7", "Tax Cert.", "Pencom", "ITF", "NSITF", "BPP IRR", "Affidavit", "Aud. Accts", "Fin. Capability", "CV of staffs & prof", "Evi. of jobs", "Training CMD Cert.", "Plants & Equip.", "Joint vent. and partnership", "Fwd letter", "Remark %"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bodyTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        bodyTable.setDragEnabled(true);
        bodyTable.setName(""); // NOI18N
        bodyTable.setOpaque(false);
        bodyTable.setPreferredSize(new java.awt.Dimension(1253, 1253));
        bodyTable.setRowHeight(40);
        bodyTable.setSelectionBackground(new java.awt.Color(51, 51, 255));
        bodyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        bodyTable.getTableHeader().setReorderingAllowed(false);
        bodyTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bodyTableFocusGained(evt);
            }
        });
        bodyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bodyTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bodyTableMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(bodyTable);
        if (bodyTable.getColumnModel().getColumnCount() > 0) {
            bodyTable.getColumnModel().getColumn(0).setPreferredWidth(120);
            bodyTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            bodyTable.getColumnModel().getColumn(2).setPreferredWidth(60);
            bodyTable.getColumnModel().getColumn(3).setPreferredWidth(55);
            bodyTable.getColumnModel().getColumn(4).setPreferredWidth(35);
            bodyTable.getColumnModel().getColumn(5).setPreferredWidth(40);
            bodyTable.getColumnModel().getColumn(6).setPreferredWidth(50);
            bodyTable.getColumnModel().getColumn(7).setPreferredWidth(55);
            bodyTable.getColumnModel().getColumn(8).setPreferredWidth(70);
            bodyTable.getColumnModel().getColumn(9).setPreferredWidth(80);
            bodyTable.getColumnModel().getColumn(10).setPreferredWidth(75);
            bodyTable.getColumnModel().getColumn(11).setPreferredWidth(70);
            bodyTable.getColumnModel().getColumn(12).setPreferredWidth(100);
            bodyTable.getColumnModel().getColumn(13).setPreferredWidth(83);
            bodyTable.getColumnModel().getColumn(14).setPreferredWidth(145);
            bodyTable.getColumnModel().getColumn(15).setPreferredWidth(60);
            bodyTable.getColumnModel().getColumn(16).setPreferredWidth(55);
        }

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(4, 80, 1350, 440);

        projectTitle.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        projectTitle.setText("PROJECT TITLE:");
        getContentPane().add(projectTitle);
        projectTitle.setBounds(257, 17, 115, 17);

        titleLabel.setFont(new java.awt.Font("Garamond", 1, 12)); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, projectTitle, org.jdesktop.beansbinding.ObjectProperty.create(), titleLabel, org.jdesktop.beansbinding.BeanProperty.create("labelFor"));
        bindingGroup.addBinding(binding);

        getContentPane().add(titleLabel);
        titleLabel.setBounds(378, 14, 898, 25);

        add.setFont(new java.awt.Font("Garamond", 0, 12)); // NOI18N
        add.setText("Insert Company");
        add.setOpaque(false);
        add.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addFocusGained(evt);
            }
        });
        add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addMouseEntered(evt);
            }
        });
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add);
        add.setBounds(600, 540, 130, 31);

        error.setFont(new java.awt.Font("Garamond", 1, 14)); // NOI18N
        error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(error);
        error.setBounds(570, 45, 234, 24);

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));
        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuBar1.setBorderPainted(false);
        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jMenuBar1.setMargin(new java.awt.Insets(10, 10, 10, 10));

        save.setBackground(new java.awt.Color(204, 204, 204));
        save.setText("Menu");
        save.setPreferredSize(new java.awt.Dimension(50, 30));
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        newLot.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newLot.setFont(new java.awt.Font("Garamond", 0, 12)); // NOI18N
        newLot.setText("Add Lot");
        newLot.setToolTipText("Click to add new Lot");
        newLot.setPreferredSize(new java.awt.Dimension(93, 50));
        newLot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newLotActionPerformed(evt);
            }
        });
        save.add(newLot);

        saveRecords.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveRecords.setFont(new java.awt.Font("Garamond", 0, 12)); // NOI18N
        saveRecords.setText("Save");
        saveRecords.setPreferredSize(new java.awt.Dimension(100, 50));
        saveRecords.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveRecordsMouseClicked(evt);
            }
        });
        saveRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveRecordsActionPerformed(evt);
            }
        });
        save.add(saveRecords);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Garamond", 0, 12)); // NOI18N
        jMenuItem1.setText("Print");
        jMenuItem1.setPreferredSize(new java.awt.Dimension(93, 50));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        save.add(jMenuItem1);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exit.setFont(new java.awt.Font("Garamond", 0, 12)); // NOI18N
        exit.setText("Exit");
        exit.setToolTipText("click to exit");
        exit.setPreferredSize(new java.awt.Dimension(120, 50));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        save.add(exit);

        jMenuBar1.add(save);

        jMenu3.setBackground(new java.awt.Color(204, 204, 204));
        jMenu3.setText("Search");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void newLotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newLotActionPerformed
        // TODO add your handling code here:
        CreateForm cForm = new CreateForm(this, true);
        cForm.setVisible(true);
    }//GEN-LAST:event_newLotActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_formFocusGained

    private void lotListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lotListFocusGained
        // TODO add your handling code here:

        try {
            CreateForm c = new CreateForm();
            String lotCode = c.s1;
            if (lotCode.isEmpty() || lotCode.startsWith(" ") || lotCode.endsWith(" ") || lotCode.contains(" ") || lotCode.contains(",") || lotList.getItemAt(lotList.getItemCount() - 1).equals(lotCode)) {
                c.s1 = null;
            } else {
                lotList.addItem(c.s1);
                lotList.setSelectedIndex(lotList.getItemCount()-1);

            }
        } catch (NullPointerException e) {
                System.err.println(e);
        }

    }//GEN-LAST:event_lotListFocusGained

    private void lotListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lotListFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_lotListFocusLost

    private void lotListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lotListMouseClicked

    }//GEN-LAST:event_lotListMouseClicked

    private void lotListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lotListActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            DefaultTableModel tableModel = (DefaultTableModel) bodyTable.getModel();
            DefaultComboBoxModel cbm = (DefaultComboBoxModel) lotList.getModel();
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            Connection con = DriverManager.getConnection("jdbc:derby:bcdaDB;create=true");
            String query = "SELECT * FROM " + lotList.getItemAt(lotList.getSelectedIndex());
            Statement stmt1 = con.createStatement();
            ResultSet rs1 = stmt1.executeQuery(query);
            ResultSetMetaData rd1 = rs1.getMetaData();

            while (i < tableModel.getRowCount()) {
                tableModel.removeRow(i);
            }

            while (rs1.next()) {
                tableModel.addRow(new Object[]{
                    rs1.getString(1), rs1.getString(2), rs1.getString(3), rs1.getString(4), rs1.getString(5), rs1.getString(6), rs1.getString(7), rs1.getString(8), rs1.getString(9), rs1.getString(10), rs1.getString(11), rs1.getString(12), rs1.getString(13), rs1.getString(14), rs1.getString(15), rs1.getString(16), rs1.getString(17)
                });
            }

            String query3 = "SELECT * FROM TABLES_INFO WHERE LOT_CODE = ?";
            PreparedStatement stmt3 = con.prepareStatement(query3);
            stmt3.setString(1, cbm.getSelectedItem().toString());
            ResultSet rs3 = stmt3.executeQuery();
            while (rs3.next()) {
                titleLabel.setText(rs3.getString("lot_title"));
            }

        } catch (SQLException ex) {
            Logger.getLogger(FrontPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_lotListActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) bodyTable.getModel();
        NewCompany c = new NewCompany(this, false, tableModel, lotList, add, newLot);
        
        c.setVisible(rootPaneCheckingEnabled);
            
    }//GEN-LAST:event_addActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveActionPerformed

    private void saveRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveRecordsActionPerformed
        try {
            // TODO add your handling code here:

            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            Connection con = DriverManager.getConnection("jdbc:derby:bcdaDB;create=true");

            int row;
            while ((row = bodyTable.getRowCount() - 1) < bodyTable.getRowCount()) {
                String query = "INSERT INTO APP." + lotList.getSelectedItem() + "(NAME_OF_COMPANY, CAC, TAX_CERT, PENCOM, ITF, NSITF, BPP_IPR, AFFIDAVIT, AUDIT_ACCOUNT_YEARS, F_CAPACITY, CV_KEY_STAFF, JOB_EVIDENCES, CMD_CERT, LIST_PLANTS, JOINT_VENTURE, FWD_LETTER, REMARK)"
                        + "VALUES ('" + bodyTable.getValueAt(row, 0) + "', '" + bodyTable.getValueAt(row, 1) + "', '" + bodyTable.getValueAt(row, 2) + "', '" + bodyTable.getValueAt(row, 3) + "', '" + bodyTable.getValueAt(row, 4) + "', '" + bodyTable.getValueAt(row, 5) + "', '" + bodyTable.getValueAt(row, 6) + "', '" + bodyTable.getValueAt(row, 7) + "', '" + bodyTable.getValueAt(row, 8) + "', '" + bodyTable.getValueAt(row, 9) + "', '" + bodyTable.getValueAt(row, 10) + "', '" + bodyTable.getValueAt(row, 11) + "', '" + bodyTable.getValueAt(row, 12) + "', '" + bodyTable.getValueAt(row, 13) + "', '" + bodyTable.getValueAt(row, 14) + "', '" + bodyTable.getValueAt(row, 15) + "', " + bodyTable.getValueAt(row, 16) + ")";
                Statement stmt1 = con.createStatement();
                int rs1 = stmt1.executeUpdate(query);

                row++;
            }

        } catch (java.sql.SQLIntegrityConstraintViolationException e) {
            
        } catch (SQLException ex) {} 
        catch (ClassNotFoundException e) {
            System.out.println(e);
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
                error.setForeground(Color.red);
                error.setText("Nothing to save");
        }

        error.setForeground(Color.green);
        error.setText("Saved");
        lotList.setEnabled(true);
        add.setEnabled(true);
        newLot.setEnabled(true);
    }//GEN-LAST:event_saveRecordsActionPerformed

    private void bodyTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bodyTableFocusGained
        // TODO add your handling code here:
        error.setText(null);
    }//GEN-LAST:event_bodyTableFocusGained

    private void addFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_addFocusGained

    private void bodyTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bodyTableMouseEntered
        // TODO add your handling code here:
        error.setText(null);
    }//GEN-LAST:event_bodyTableMouseEntered

    private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_addMouseClicked

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_saveMouseClicked

    private void saveRecordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveRecordsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_saveRecordsMouseClicked

    private void bodyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bodyTableMouseClicked
        // TODO add your handling code here:

        if (SwingUtilities.isRightMouseButton(evt)) {
            JPopupMenu popup = new JPopupMenu();
            JMenuItem item1 = new JMenuItem("Edit");
            item1.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                        EditCompany edit = new EditCompany(new FrontPage(), true, bodyTable, lotList);
                        edit.setVisible(true);
                }
            });

            popup.add(item1);
            JMenuItem item2 = new JMenuItem("Delete");
            item2.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    Check c = new Check(new FrontPage(), true, lotList, bodyTable);
                    c.setVisible(true);
                }

            });
            popup.add(item2);

            popup.show(bodyTable, evt.getX(), evt.getY());

        }
    }//GEN-LAST:event_bodyTableMouseClicked

    private void addMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMouseEntered
        // TODO add your handling code here:
        error.setText(null);
    }//GEN-LAST:event_addMouseEntered

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
         
        
    }//GEN-LAST:event_formKeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        Printer print = new Printer(this);
        print.print();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        FrontPage f = new FrontPage();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(d.width, d.width);
        f.setLocation(0, 0);
   
        f.setVisible(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTable bodyTable;
    private javax.swing.JLabel error;
    private javax.swing.JMenuItem exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> lotList;
    private javax.swing.JMenuItem newLot;
    private javax.swing.JLabel projectTitle;
    private javax.swing.JMenu save;
    private javax.swing.JMenuItem saveRecords;
    private javax.swing.JLabel titleLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
